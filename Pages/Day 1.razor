@page "/day_1"
@inject ILogger<Day_1> Logger

@using Advent_of_Code.Data
@inject Day1Service Day1Service

<PageTitle>Day 1</PageTitle>

<h1>Day 1</h1>

Here is where the description of the task, once live will go.

Below is where you can upload the inputs.

<h2>Part 1:</h2>
<EditForm Model="@Model" OnValidSubmit="@SubmitPart1" FormName="Day1Input">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputTextArea @bind-Value="Model!.PuzzleInputPart1" style="width: 100%;" />
    <button type="submit">Submit</button>
</EditForm>

Your answer is:
@AnswerTextPart1.ToString()

<h2>Part 2:</h2>

<EditForm Model="@Model" OnValidSubmit="@SubmitPart2" FormName="Day1Input">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputTextArea @bind-Value="Model!.PuzzleInputPart2" style="width: 100%;" />
    <button type="submit">Submit</button>
</EditForm>

Your answer is:
@AnswerTextPart2.ToString()


@code {

    public class PuzzleFormModel { public string? PuzzleInputPart1 { get; set; } public string? PuzzleInputPart2 { get; set; } }
    public int? AnswerTextPart1 = 0;
    public int? AnswerTextPart2 = 0;

    [SupplyParameterFromForm]
    private PuzzleFormModel? Model { get; set; }
    protected override void OnInitialized() => Model ??= new();

    private void SubmitPart1()
    {
        AnswerTextPart1 = Day1Service.SolveDay1Part1(Model?.PuzzleInputPart1 ?? "");
    }

    private void SubmitPart2()
    {
        AnswerTextPart2 = Day1Service.SolveDay1Part2(Model?.PuzzleInputPart2 ?? "");
    }
}